#---------------------------------------------------------------------------#
# Copyright (c) 2018-2020 Mikhail Komarov <nemo@nil.foundation>
#
# Distributed under the Boost Software License, Version 1.0
# See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt
#---------------------------------------------------------------------------#

import testing ;
import modules ;
import path ;
import ../../config/checks/config : requires ;

path-constant here : . ;

project : requirements
   <include>../include
   <include>../../..
   <toolset>clang:<cxxflags>-Wno-unused-variable  # warning: unused variable 'tolerance' [-Wunused-variable]
   <toolset>clang:<cxxflags>-Wno-unknown-pragmas
   <toolset>clang:<cxxflags>-Wno-reorder
;

test-suite block_tests :

   [ run block/kasumi.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run block/md4.cpp /boost/test//boost_unit_test_framework/<link>static
   /boost/filesystem//boost_filesystem/<link>static
      : # command line
      : # input files
      : # requirements
      : block_md4_test ]
   [ run block/md5.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static
      : # command line
      : # input files
      : # requirements
      : block_md5_test ]
   [ run block/pack.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static
      : # command line
      : # input files
      : # requirements
      : block_pack_test ]
   [ run block/rijndael.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run block/shacal.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run block/shacal2.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
;

test-suite codec_tests :

   [ run codec/base.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run codec/hex.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
;

test-suite hash_tests :

   [ run hash/blake2b.cpp /boost/test//boost_unit_test_framework/<link>static  /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/keccak.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/md4.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static
      : # command line
      : # input files
      : # requirements
      : hash_md4_test ]
   [ run hash/md5.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static
      : # command line
      : # input files
      : # requirements
      : hash_md5_test ]
   [ run hash/pack.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static
      : # command line
      : # input files
      : # requirements
      : hash_pack_test ]
   [ run hash/ripemd.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/sha.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/sha1.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/sha2.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/sha3.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/static_digest.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
   [ run hash/tiger.cpp /boost/test//boost_unit_test_framework/<link>static /boost/filesystem//boost_filesystem/<link>static ]
;